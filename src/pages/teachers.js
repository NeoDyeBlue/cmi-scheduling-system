import Head from 'next/head';
import { MainLayout } from '@/components/Layouts';
import { CreateButton } from '@/components/Buttons';
import { Modal } from '@/components/Modals';
import { SearchForm, TeacherForm } from '@/components/Forms';
import { useState } from 'react';
import { TeacherTable } from '@/components/Tables';
import usePaginate from '@/hooks/usePaginate';
import ReactPaginate from 'react-paginate';

export default function Teachers() {
  const [isModalOpen, setIsModalOpen] = useState(false);
  const [searchValue, setSearchValue] = useState('');
  const { docs, pageData, setPageIndex, mutate } = usePaginate({
    url: `/api/teachers${searchValue ? '/search' : ''}`,
    limit: 3,
    query: { ...(searchValue ? { q: searchValue } : {}) },
  });
  return (
    <>
      <Head>
        <title>Teachers | CMI - Scheduler</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="flex w-full flex-col gap-6 p-6">
        <Modal
          label="New Teacher"
          isOpen={isModalOpen}
          onClose={() => setIsModalOpen(false)}
        >
          <TeacherForm
            onCancel={() => setIsModalOpen(false)}
            onAfterSubmit={() => {
              setIsModalOpen(false);
              mutate();
            }}
          />
        </Modal>
        <div className="flex items-center justify-between gap-4">
          <div className="w-full max-w-[350px]">
            <SearchForm
              placeholder="Search teachers"
              onSearch={(value) => setSearchValue(value)}
            />
          </div>
          <CreateButton
            onClick={() => setIsModalOpen(true)}
            text="New Teacher"
          />
        </div>
        <div className="flex flex-col gap-4">
          <div className="overflow-x-auto">
            <TeacherTable data={docs} mutate={() => mutate()} />
          </div>
          <ReactPaginate
            breakLabel="..."
            nextLabel="next >"
            onPageChange={({ selected }) => setPageIndex(selected + 1)}
            pageRangeDisplayed={5}
            pageCount={Math.ceil(pageData?.totalPages) || 0}
            previousLabel="< prev"
            renderOnZeroPageCount={null}
            containerClassName="paginate-container"
            previousLinkClassName="paginate-button"
            nextLinkClassName="paginate-button"
            pageLinkClassName="paginate-link"
            activeLinkClassName="paginate-link-active"
            breakLinkClassName="paginate-break"
            disabledLinkClassName="paginate-link-disabled"
          />
        </div>
      </div>
    </>
  );
}

Teachers.getLayout = function getLayout(page) {
  return <MainLayout name={'Teachers'}>{page}</MainLayout>;
};
